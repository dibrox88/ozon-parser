"""–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞."""
from playwright.sync_api import sync_playwright
from loguru import logger
from config import Config
from auth import OzonAuth
from parser import OzonParser
from session_manager import SessionManager
import json


def test_single_order():
    """–¢–µ—Å—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ–¥–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞."""
    order_number = "46206571-0662"
    
    logger.info(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–∫–∞–∑–∞: {order_number}")
    
    with sync_playwright() as p:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        browser = p.chromium.launch(
            headless=False,
            args=['--disable-blink-features=AutomationControlled']
        )
        
        context = browser.new_context(
            viewport={'width': 1920, 'height': 1080},
            user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'
        )
        
        # –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
        context.add_init_script("""
            Object.defineProperty(navigator, 'webdriver', { 
                get: () => undefined 
            });
            
            Object.defineProperty(navigator, 'plugins', { 
                get: () => [1, 2, 3, 4, 5] 
            });
        """)
        logger.debug("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω init_script –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏")
        
        page = context.new_page()
        
        try:
            # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–æ–≤
            auth = OzonAuth(page)
            parser = OzonParser(page)
            session_manager = SessionManager()
            
            # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
            logger.info("üîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
            
            # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Å—Å–∏—é
            if session_manager.session_exists():
                logger.info("üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é...")
                session_manager.load_session(browser)
                page.goto(Config.OZON_ORDERS_URL)
                page.wait_for_load_state('networkidle')
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
                if not auth.verify_login():
                    logger.warning("–°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
                    session_manager.delete_session()
                    auth.login()
                    session_manager.save_session(context)
            else:
                logger.info("üîë –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
                auth.login()
                session_manager.save_session(context)
            
            logger.info("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
            
            # –ü–∞—Ä—Å–∏–º –∑–∞–∫–∞–∑
            logger.info(f"üì¶ –ü–∞—Ä—Å–∏–º –∑–∞–∫–∞–∑ {order_number}...")
            order_data = parser.parse_order_details(order_number)
            
            if order_data:
                logger.info("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–µ–Ω!")
                logger.info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:")
                logger.info(f"  –î–∞—Ç–∞: {order_data['date']}")
                logger.info(f"  –°—É–º–º–∞: {order_data['total_amount']} ‚ÇΩ")
                logger.info(f"  –¢–æ–≤–∞—Ä–æ–≤: {order_data['items_count']} —à—Ç ({len(order_data['items'])} –ø–æ–∑–∏—Ü–∏–π)")
                
                logger.info(f"\nüõç –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:")
                for idx, item in enumerate(order_data['items'], 1):
                    logger.info(f"  {idx}. {item['name']}")
                    logger.info(f"     –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item['quantity']}")
                    logger.info(f"     –¶–µ–Ω–∞: {item['price']} ‚ÇΩ")
                    logger.info(f"     –°—É–º–º–∞: {item['quantity'] * item['price']} ‚ÇΩ")
                    logger.info(f"     –°—Ç–∞—Ç—É—Å: {item['status']}")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON
                output_file = f"test_order_{order_number}.json"
                with open(output_file, 'w', encoding='utf-8') as f:
                    json.dump(order_data, f, ensure_ascii=False, indent=2)
                logger.info(f"üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_file}")
                
            else:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∞—Ä—Å–∏—Ç—å –∑–∞–∫–∞–∑")
            
            # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
            
        finally:
            browser.close()


if __name__ == "__main__":
    test_single_order()
