"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Ç–æ–¥–æ–≤ get_order_data –∏ compare_orders.
"""

from loguru import logger
from sheets_sync import SheetsSynchronizer
import json

def main():
    logger.info("=" * 80)
    logger.info("üß™ –¢–ï–°–¢: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞")
    logger.info("=" * 80)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ç–æ—Ä
    from config import Config
    sync = SheetsSynchronizer(credentials_file=Config.GOOGLE_CREDENTIALS_FILE)
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
    if not sync.connect():
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Sheets")
        return
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ª–∏—Å—Ç
    if not sync.open_sync_worksheet(Config.GOOGLE_SHEETS_URL, Config.GOOGLE_SHEETS_SYNC_GID):
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ª–∏—Å—Ç")
        return
    
    # –ß–∏—Ç–∞–µ–º JSON —Å –∑–∞–∫–∞–∑–∞–º–∏
    with open('ozon_orders.json', encoding='utf-8') as f:
        data = json.load(f)
    
    # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∞
    test_order = data['orders'][0]
    order_number = test_order['order_number']
    
    logger.info(f"\nüì¶ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑: {order_number}")
    logger.info(f"   –¢–æ–≤–∞—Ä–æ–≤ –≤ JSON: {len(test_order['items'])}")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Sheets
    logger.info(f"\nüîç –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets...")
    sheets_data = sync.get_order_data(order_number)
    
    if not sheets_data:
        logger.warning(f"‚ö†Ô∏è –ó–∞–∫–∞–∑ {order_number} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
        logger.info("\n–í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞.")
        return
    
    logger.info(f"   –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ –≤ Sheets: {sheets_data.get('total_rows', 0)}")
    logger.info(f"   –î–∏–∞–ø–∞–∑–æ–Ω —Å—Ç—Ä–æ–∫: {sheets_data.get('start_row')}-{sheets_data.get('end_row')}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏
    logger.info(f"\n   –ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏:")
    for row in sheets_data.get('rows', [])[:3]:
        logger.info(f"     ‚Ä¢ {row['mapped_name']} | status={row['status']} | price={row['price']}")
    
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º
    logger.info(f"\nüîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...")
    comparison = sync.compare_orders(test_order, sheets_data)
    
    if comparison['has_changes']:
        logger.warning(f"‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è ({len(comparison['changes'])} –∏–∑–º–µ–Ω–µ–Ω–∏–π):")
        for change in comparison['changes']:
            logger.warning(f"     {change}")
        
        # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        details = comparison['details']
        if 'added' in details:
            logger.info(f"\n   ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(details['added'])}")
        if 'removed' in details:
            logger.info(f"\n   ‚ûñ –£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(details['removed'])}")
        if 'modified' in details:
            logger.info(f"\n   üîÑ –ò–∑–º–µ–Ω–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(details['modified'])}")
    else:
        logger.info(f"‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ - –¥–∞–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
    
    logger.info("\n" + "=" * 80)
    logger.info("‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–Å–ù")
    logger.info("=" * 80)

if __name__ == '__main__':
    main()
