"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤.
"""

import json
from pathlib import Path
from loguru import logger
from excluded_manager import ExcludedOrdersManager

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
Path('logs').mkdir(exist_ok=True)
logger.add(
    "logs/test_exclude_{time}.log",
    level="DEBUG",
    format="{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}"
)


def test_excluded_manager():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ExcludedOrdersManager."""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ï–•–ê–ù–ò–ó–ú–ê –ò–°–ö–õ–Æ–ß–ï–ù–ò–Ø –ó–ê–ö–ê–ó–û–í")
    print("="*60 + "\n")
    
    # –°–æ–∑–¥–∞—ë–º –º–µ–Ω–µ–¥–∂–µ—Ä
    manager = ExcludedOrdersManager("excluded_orders_test.json")
    
    # –¢–µ—Å—Ç 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
    print("üìù –¢–µ—Å—Ç 1: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –≤ —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö")
    test_orders = ["46206571-0580", "46206571-0593", "46206571-0609"]
    
    for order_num in test_orders:
        result = manager.add_excluded(order_num)
        print(f"  {'‚úÖ' if result else '‚ùå'} –î–æ–±–∞–≤–ª–µ–Ω: {order_num}")
    
    print(f"\nüìä –í—Å–µ–≥–æ –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö: {manager.get_count()}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è
    print("\nüîç –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–∞–∫–∞–∑–æ–≤")
    check_orders = ["46206571-0580", "46206571-0591", "46206571-0593"]
    
    for order_num in check_orders:
        is_excluded = manager.is_excluded(order_num)
        status = "üö´ –ò–°–ö–õ–Æ–ß–Å–ù" if is_excluded else "‚úÖ –ê–ö–¢–ò–í–ï–ù"
        print(f"  {status}: {order_num}")
    
    # –¢–µ—Å—Ç 3: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤
    print("\nüîÑ –¢–µ—Å—Ç 3: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_file = "ozon_orders_rematched_2025-10-06_22-13-34.json"
    
    if Path(test_file).exists():
        with open(test_file, 'r', encoding='utf-8') as f:
            data = json.load(f)
            all_orders = data.get('orders', [])
        
        print(f"  üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(all_orders)}")
        
        valid_orders, excluded_orders = manager.filter_orders(all_orders)
        
        print(f"  ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {len(valid_orders)}")
        print(f"  üö´ –ò—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {len(excluded_orders)}")
        
        if excluded_orders:
            print("\n  –°–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö:")
            for order in excluded_orders:
                print(f"    ‚Ä¢ {order.get('order_number', '?')}")
    else:
        print(f"  ‚ö†Ô∏è –§–∞–π–ª {test_file} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –¢–µ—Å—Ç 4: –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
    print("\nüóëÔ∏è –¢–µ—Å—Ç 4: –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –∏–∑ —Å–ø–∏—Å–∫–∞")
    remove_order = "46206571-0593"
    result = manager.remove_excluded(remove_order)
    print(f"  {'‚úÖ' if result else '‚ùå'} –£–¥–∞–ª—ë–Ω: {remove_order}")
    print(f"  üìä –û—Å—Ç–∞–ª–æ—Å—å –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö: {manager.get_count()}")
    
    # –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞
    print("\nüìã –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö")
    excluded_list = manager.get_excluded_list()
    print(f"  –í—Å–µ–≥–æ: {len(excluded_list)}")
    for order_num in excluded_list:
        print(f"    ‚Ä¢ {order_num}")
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    print("\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞...")
    test_path = Path("excluded_orders_test.json")
    if test_path.exists():
        test_path.unlink()
        print("  ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª—ë–Ω")
    
    print("\n" + "="*60)
    print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
    print("="*60 + "\n")


def test_integration_with_matcher():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å product_matcher."""
    print("\n" + "="*60)
    print("üß™ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° PRODUCT MATCHER")
    print("="*60 + "\n")
    
    # –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
    manager = ExcludedOrdersManager("excluded_orders_test2.json")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
    test_order = "46206571-TEST"
    manager.add_excluded(test_order)
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑: {test_order}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–Ω –≤ —Å–ø–∏—Å–∫–µ
    is_excluded = manager.is_excluded(test_order)
    print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: {'üö´ –ò–°–ö–õ–Æ–ß–Å–ù' if is_excluded else '‚úÖ –ê–ö–¢–ò–í–ï–ù'}")
    
    # –û—á–∏—Å—Ç–∫–∞
    test_path = Path("excluded_orders_test2.json")
    if test_path.exists():
        test_path.unlink()
        print("üßπ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª—ë–Ω")
    
    print("\n‚úÖ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –ü–†–û–ô–î–ï–ù!\n")


if __name__ == '__main__':
    try:
        logger.info("="*60)
        logger.info("üß™ –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –ú–ï–•–ê–ù–ò–ó–ú–ê –ò–°–ö–õ–Æ–ß–ï–ù–ò–Ø")
        logger.info("="*60)
        
        test_excluded_manager()
        test_integration_with_matcher()
        
        logger.info("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        
    except Exception as e:
        logger.exception(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤: {e}")
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {e}\n")
        raise
