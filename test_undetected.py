"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ö–æ–¥–∞ anti-bot –∑–∞—â–∏—Ç—ã Ozon
—Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º undetected-chromedriver
"""

import undetected_chromedriver as uc
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import random
from loguru import logger

def human_delay(min_sec=2.0, max_sec=5.0):
    """–°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞"""
    delay = random.uniform(min_sec, max_sec)
    logger.info(f"‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞: {delay:.2f}—Å")
    time.sleep(delay)

def test_ozon_access():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Ozon"""
    
    logger.info("=" * 60)
    logger.info("üöÄ –¢–ï–°–¢ UNDETECTED-CHROMEDRIVER")
    logger.info("=" * 60)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Chrome
    options = uc.ChromeOptions()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
    options.add_argument('--disable-blink-features=AutomationControlled')
    options.add_argument('--start-maximized')
    options.add_argument('--disable-dev-shm-usage')
    options.add_argument('--no-sandbox')
    
    # –°–æ–∑–¥–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä (undetected –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ö–æ–¥–∏—Ç –¥–µ—Ç–µ–∫—Ç)
    logger.info("üåê –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...")
    driver = uc.Chrome(options=options, version_main=141)
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º User-Agent
        driver.execute_cdp_cmd('Network.setUserAgentOverride', {
            "userAgent": 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
        })
        
        logger.info("üìç –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Ozon...")
        driver.get('https://www.ozon.ru/')
        
        human_delay(3, 6)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
        current_url = driver.current_url
        page_title = driver.title
        page_source = driver.page_source[:1000]
        
        logger.info(f"‚úÖ URL: {current_url}")
        logger.info(f"‚úÖ Title: {page_title}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
        if "captcha" in current_url.lower() or "captcha" in page_source.lower():
            logger.error("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–ê –ö–ê–ü–ß–ê!")
            driver.save_screenshot('screenshots/captcha_detected.png')
        elif "access" in current_url.lower() or "denied" in page_source.lower():
            logger.error("‚ùå –î–û–°–¢–£–ü –ó–ê–ü–†–ï–©–ï–ù!")
            driver.save_screenshot('screenshots/access_denied.png')
        elif "cloudflare" in page_source.lower():
            logger.error("‚ùå CLOUDFLARE –ó–ê–©–ò–¢–ê!")
            driver.save_screenshot('screenshots/cloudflare.png')
        elif "ozon.ru" in current_url:
            logger.success("‚úÖ –°–¢–†–ê–ù–ò–¶–ê –ó–ê–ì–†–£–ñ–ï–ù–ê –£–°–ü–ï–®–ù–û!")
            driver.save_screenshot('screenshots/success_load.png')
            
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏"
            try:
                human_delay(2, 4)
                login_button = WebDriverWait(driver, 10).until(
                    EC.presence_of_element_located((By.XPATH, "//button[contains(., '–í–æ–π—Ç–∏') or contains(., '–≤–æ–π—Ç–∏')]"))
                )
                logger.success("‚úÖ –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏' –Ω–∞–π–¥–µ–Ω–∞!")
                logger.info("üéâ –î–û–°–¢–£–ü –ö OZON –ü–û–õ–£–ß–ï–ù! Anti-bot –æ–±–æ–π–¥–µ–Ω!")
            except Exception as e:
                logger.warning(f"‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ '–í–æ–π—Ç–∏' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ –¥—Ä—É–≥–æ–π –ª–µ–π–∞—É—Ç): {e}")
        else:
            logger.warning(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π URL: {current_url}")
            driver.save_screenshot('screenshots/unexpected.png')
        
        # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        logger.info("‚è≥ –î–µ—Ä–∂–∏–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏...")
        time.sleep(10)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        driver.save_screenshot('screenshots/error.png')
    
    finally:
        logger.info("üîö –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä...")
        driver.quit()

if __name__ == "__main__":
    test_ozon_access()
