"""–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
import sys
import os
from pathlib import Path
from playwright.sync_api import sync_playwright, Browser, BrowserContext, Page
from loguru import logger

try:
    # playwright-stealth v2.0.0
    from playwright_stealth import Stealth
    stealth = Stealth()
    STEALTH_AVAILABLE = True
    logger.info("‚úÖ playwright-stealth –∑–∞–≥—Ä—É–∂–µ–Ω (v2.0)")
except ImportError:
    logger.warning("playwright-stealth –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é –∑–∞—â–∏—Ç—É")
    STEALTH_AVAILABLE = False
    stealth = None

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
Path('logs').mkdir(exist_ok=True)
logger.add(
    "logs/ozon_parser_{time}.log",
    rotation="1 day",
    retention="7 days",
    level="INFO",
    format="{time:YYYY-MM-DD HH:mm:ss} | {level} | {message}"
)

from config import Config
from auth import OzonAuth
from parser import OzonParser
from notifier import sync_send_message
from session_manager import SessionManager


def setup_browser_context(browser: Browser) -> BrowserContext:
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –±—Ä–∞—É–∑–µ—Ä–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ anti-detection –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.
    
    Args:
        browser: –ë—Ä–∞—É–∑–µ—Ä Playwright
        
    Returns:
        –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    """
    context = browser.new_context(
        viewport={'width': 1920, 'height': 1080},
        user_agent='Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36',
        locale='ru-RU',
        timezone_id='Europe/Moscow',
        java_script_enabled=True,
        ignore_https_errors=True  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç SSL –æ—à–∏–±–∫–∏
    )
    
    # –ú–∞—Å–∫–∏—Ä–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ (—Ä–µ–∑–µ—Ä–≤–Ω—ã–π —Å–ª–æ–π –ø–æ–≤–µ—Ä—Ö playwright-stealth)
    context.add_init_script("""
        Object.defineProperty(navigator, 'webdriver', { 
            get: () => undefined 
        });
        
        Object.defineProperty(navigator, 'plugins', { 
            get: () => [1, 2, 3, 4, 5] 
        });
    """)
    logger.debug("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω init_script –¥–ª—è –º–∞—Å–∫–∏—Ä–æ–≤–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏")
    
    return context


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        Config.validate()
        
        logger.info("–ó–∞–ø—É—Å–∫ Ozon Parser")
        sync_send_message("üöÄ <b>Ozon Parser –∑–∞–ø—É—â–µ–Ω</b>\n\n–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å–µ—Å—Å–∏–π
        session_manager = SessionManager()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        with sync_playwright() as p:
            logger.info("–ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...")
            
            # –£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ (–∏–∑ –ø–∞—Ä—Å–µ—Ä–∞ Amvera)
            logger.info("üåê –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å anti-detection –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏...")
            browser = p.chromium.launch(
                headless=Config.HEADLESS,
                args=[
                    '--start-maximized',
                    '--disable-blink-features=AutomationControlled',  # –°–∫—Ä—ã–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é
                    '--disable-dev-shm-usage',                        # –î–ª—è Docker
                    '--no-sandbox',                                   # –î–ª—è Docker
                    '--disable-web-security',                         # –£–±–∏—Ä–∞–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
                    '--disable-features=VizDisplayCompositor'         # –ú–µ–Ω—å—à–µ GPU –ø—Ä–æ–≤–µ—Ä–æ–∫
                ],
                slow_mo=50  # –ó–∞–º–µ–¥–ª—è–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è (–±–æ–ª–µ–µ —á–µ–ª–æ–≤–µ—á–Ω–æ)
            )
            
            # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é –∏–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ cookies
            context = None
            page = None
            needs_auth = True
            cookies_failed = False  # –§–ª–∞–≥: –ø—ã—Ç–∞–ª–∏—Å—å –ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å cookies –∏ –æ–Ω–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏
            
            # –ü–†–ò–û–†–ò–¢–ï–¢ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö cookies (–æ–±—Ö–æ–¥–∏—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫—É!)
            if session_manager.cookies_exist():
                logger.info("üç™ –ù–∞–π–¥–µ–Ω—ã —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ cookies! –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö –¥–ª—è –æ–±—Ö–æ–¥–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏...")
                sync_send_message("üç™ –ò—Å–ø–æ–ª—å–∑—É–µ–º cookies –∏–∑ –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞...")
                
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
                context = setup_browser_context(browser)
                
                # –ó–∞–≥—Ä—É–∂–∞–µ–º cookies
                if session_manager.load_cookies_to_context(context):
                    page = context.new_page()
                    
                    # –ü—Ä–∏–º–µ–Ω—è–µ–º stealth –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞–Ω—Ç–∏–±–æ—Ç –∑–∞—â–∏—Ç—ã
                    if STEALTH_AVAILABLE and stealth:
                        stealth.apply_stealth_sync(page)
                        logger.info("‚úÖ Stealth –ø—Ä–∏–º–µ–Ω–µ–Ω –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
                    
                    page.set_default_timeout(Config.DEFAULT_TIMEOUT)
                    page.set_default_navigation_timeout(Config.NAVIGATION_TIMEOUT)
                    
                    try:
                        # –ü—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–∫–∞–∑–æ–≤
                        logger.info("üìç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Å cookies...")
                        page.goto(Config.OZON_ORDERS_URL, timeout=30000)
                        page.wait_for_load_state('networkidle', timeout=15000)
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ª–∏ –º—ã
                        auth = OzonAuth(page)
                        if auth.verify_login():
                            logger.success("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å cookies —É—Å–ø–µ—à–Ω–∞! –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–±–æ–π–¥–µ–Ω–∞!")
                            sync_send_message("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —á–µ—Ä–µ–∑ cookies! –ü–∞—Ä—Å–∏–Ω–≥ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è...")
                            needs_auth = False
                        else:
                            logger.warning("‚ö†Ô∏è Cookies —É—Å—Ç–∞—Ä–µ–ª–∏, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç")
                            sync_send_message("‚ö†Ô∏è Cookies —É—Å—Ç–∞—Ä–µ–ª–∏. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–µ: python export_cookies.py")
                            cookies_failed = True  # –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ cookies –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –Ω–æ page –µ—â—ë –æ—Ç–∫—Ä—ã—Ç
                            # –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º context –∏ page - –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                    
                    except RuntimeError as e:
                        # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
                        if "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Ozon" in str(e):
                            logger.error(f"üõë –ü–ê–†–°–ò–ù–ì –û–°–¢–ê–ù–û–í–õ–ï–ù: {e}")
                            if context:
                                context.close()
                            browser.close()
                            sys.exit(1)
                        else:
                            raise  # –î—Ä—É–≥–∏–µ RuntimeError –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º
                    
                    except Exception as e:
                        logger.warning(f"‚ö†Ô∏è Cookies –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏: {e}")
                        sync_send_message(f"‚ö†Ô∏è Cookies –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
                        if context:
                            context.close()
                        context = None
                else:
                    logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å cookies")
                    if context:
                        context.close()
                    context = None
            
            # –ü–†–ò–û–†–ò–¢–ï–¢ 2: –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ä—É—é Playwright —Å–µ—Å—Å–∏—é
            elif session_manager.session_exists():
                logger.info("üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é...")
                sync_send_message("üîÑ –ù–∞–π–¥–µ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è. –ü—Ä–æ–≤–µ—Ä—è–µ–º...")
                
                context = session_manager.load_session(browser)
                
                if context:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ —Å–µ—Å—Å–∏—è
                    page = context.new_page()
                    
                    # –ü—Ä–∏–º–µ–Ω—è–µ–º stealth –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞–Ω—Ç–∏–±–æ—Ç –∑–∞—â–∏—Ç—ã
                    if STEALTH_AVAILABLE and stealth:
                        stealth.apply_stealth_sync(page)
                        logger.info("‚úÖ Stealth –ø—Ä–∏–º–µ–Ω–µ–Ω –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
                    
                    page.set_default_timeout(Config.DEFAULT_TIMEOUT)
                    page.set_default_navigation_timeout(Config.NAVIGATION_TIMEOUT)
                    
                    try:
                        # –ü—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–∫–∞–∑–æ–≤
                        page.goto(Config.OZON_ORDERS_URL, timeout=30000)
                        page.wait_for_load_state('networkidle', timeout=15000)
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –ª–∏ –º—ã
                        auth = OzonAuth(page)
                        if auth.verify_login():
                            logger.info("‚úÖ –°–µ—Å—Å–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞! –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
                            sync_send_message("‚úÖ –°–µ—Å—Å–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞! –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.")
                            needs_auth = False
                        else:
                            logger.warning("‚ö†Ô∏è –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
                            sync_send_message("‚ö†Ô∏è –°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
                            session_manager.delete_session()
                            context.close()
                            context = None
                    
                    except RuntimeError as e:
                        # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞
                        if "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Ozon" in str(e):
                            logger.error(f"üõë –ü–ê–†–°–ò–ù–ì –û–°–¢–ê–ù–û–í–õ–ï–ù: {e}")
                            if context:
                                context.close()
                            browser.close()
                            sys.exit(1)
                        else:
                            raise
                    
                    except Exception as e:
                        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é: {e}")
                        sync_send_message("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–µ—Å—Å–∏—é. –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...")
                        session_manager.delete_session()
                        if context:
                            context.close()
                        context = None
            
            # –ï—Å–ª–∏ —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç –∏–ª–∏ –æ–Ω–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
            if context is None:
                context = setup_browser_context(browser)
                page = context.new_page()
                
                # –ü—Ä–∏–º–µ–Ω—è–µ–º stealth –¥–ª—è –æ–±—Ö–æ–¥–∞ –∞–Ω—Ç–∏–±–æ—Ç –∑–∞—â–∏—Ç—ã
                if STEALTH_AVAILABLE and stealth:
                    stealth.apply_stealth_sync(page)
                    logger.info("‚úÖ Stealth –ø—Ä–∏–º–µ–Ω–µ–Ω –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
                
                page.set_default_timeout(Config.DEFAULT_TIMEOUT)
                page.set_default_navigation_timeout(Config.NAVIGATION_TIMEOUT)
            
            # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ page –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
            if page is None:
                raise RuntimeError("Page –Ω–µ –±—ã–ª –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            try:
                # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
                if needs_auth:
                    auth = OzonAuth(page)
                    # –ï—Å–ª–∏ cookies –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –ø–µ—Ä–µ–¥–∞—ë–º —Ñ–ª–∞–≥ —á—Ç–æ–±—ã –Ω–µ –¥–µ–ª–∞—Ç—å –ª–∏—à–Ω–∏–π goto
                    if not auth.login(skip_initial_navigation=cookies_failed):
                        logger.error("‚ùå –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å –∏–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞")
                        sync_send_message("‚ùå <b>–†–∞–±–æ—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</b>\n\n–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å –∏–ª–∏ Ozon –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –¥–æ—Å—Ç—É–ø.")
                        
                        # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ–ª–Ω–æ—Å—Ç—å—é
                        logger.error("üõë –ü–ê–†–°–ò–ù–ì –û–°–¢–ê–ù–û–í–õ–ï–ù: –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏–ª–∏ –Ω–µ—É–¥–∞—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
                        context.close()
                        browser.close()
                        sys.exit(1)  # –í—ã—Ö–æ–¥ —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏
                    
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                    logger.info("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é...")
                    if session_manager.save_session(context):
                        sync_send_message("üíæ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è!")
                    else:
                        logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–µ—Å—Å–∏—é")
                
                # –ü–∞—Ä—Å–∏–Ω–≥
                parser = OzonParser(page)
                if not parser.navigate_to_orders():
                    logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–∫–∞–∑–∞–º (–≤–æ–∑–º–æ–∂–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞)")
                    sync_send_message("‚ùå <b>–†–∞–±–æ—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</b>\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–∫–∞–∑–∞–º.")
                    
                    # –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
                    logger.error("üõë –ü–ê–†–°–ò–ù–ì –û–°–¢–ê–ù–û–í–õ–ï–ù: –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏–ª–∏ –æ—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–∫–∞–∑–∞–º")
                    context.close()
                    browser.close()
                    sys.exit(1)
                
                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤
                orders = parser.parse_orders()
                
                logger.info(f"–ü–∞—Ä—Å–∏–Ω–≥ –Ω–æ–º–µ—Ä–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω. –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}")
                sync_send_message(f"‚úÖ <b>–ù–∞–π–¥–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: {len(orders)}</b>\n\n–ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –¥–µ—Ç–∞–ª–µ–π...")
                
                # –ü–∞—Ä—Å–∏–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–≥–æ –∑–∞–∫–∞–∑–∞
                if orders:
                    logger.info("üìÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–æ–≤...")
                    all_orders_data = []
                    
                    # –ü–∞—Ä—Å–∏–º –≤—Å–µ –∑–∞–∫–∞–∑—ã
                    for i, order_number in enumerate(orders, 1):
                        logger.info(f"üì¶ [{i}/{len(orders)}] –ü–∞—Ä—Å–∏–º –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞: {order_number}")
                        sync_send_message(f"üì¶ –ü–∞—Ä—Å–∏–º –∑–∞–∫–∞–∑ {order_number}")
                        
                        try:
                            order_details = parser.parse_order_details(order_number)
                            
                            if order_details:
                                all_orders_data.append(order_details)
                                logger.info(f"‚úÖ [{i}/{len(orders)}] –£—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–µ–Ω –∑–∞–∫–∞–∑ {order_number}")
                                logger.info(f"   –¢–æ–≤–∞—Ä–æ–≤: {order_details['items_count']}, –°—É–º–º–∞: {order_details['total_amount']}‚ÇΩ")
                            else:
                                logger.warning(f"‚ö†Ô∏è [{i}/{len(orders)}] –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∞—Ä—Å–∏—Ç—å –∑–∞–∫–∞–∑ {order_number}")
                        
                        except RuntimeError as e:
                            # –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
                            if "–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Ozon" in str(e):
                                logger.error(f"üõë –ü–ê–†–°–ò–ù–ì –û–°–¢–ê–ù–û–í–õ–ï–ù: {e}")
                                context.close()
                                browser.close()
                                sys.exit(1)
                            else:
                                raise  # –î—Ä—É–≥–∏–µ RuntimeError –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ
                    
                    logger.info(f"‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω. –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(all_orders_data)}/{len(orders)} –∑–∞–∫–∞–∑–æ–≤")
                    
                    # –§–∏–ª—å—Ç—Ä—É–µ–º –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
                    from excluded_manager import ExcludedOrdersManager
                    excluded_manager = ExcludedOrdersManager()
                    
                    if excluded_manager.get_count() > 0:
                        logger.info(f"üìã –í —Å–ø–∏—Å–∫–µ –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö: {excluded_manager.get_count()} –∑–∞–∫–∞–∑–æ–≤")
                        valid_orders, excluded_orders = excluded_manager.filter_orders(all_orders_data)
                        
                        if excluded_orders:
                            logger.info(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: {len(excluded_orders)}")
                            excluded_nums = [o.get('order_number', '?') for o in excluded_orders]
                            sync_send_message(f"‚è≠Ô∏è <b>–ü—Ä–æ–ø—É—â–µ–Ω–æ –∏—Å–∫–ª—é—á—ë–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤:</b> {len(excluded_orders)}\n\n" + 
                                            "\n".join(f"‚Ä¢ <code>{num}</code>" for num in excluded_nums))
                        
                        all_orders_data = valid_orders
                    
                    logger.info(f"‚úÖ –ó–∞–∫–∞–∑–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(all_orders_data)}")
                    
                    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞—Ö
                    summary_message = f"‚úÖ <b>–ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!</b>\n\n"
                    summary_message += f"üìä <b>–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ:</b> {len(all_orders_data)}/{len(orders)} –∑–∞–∫–∞–∑–æ–≤\n\n"
                    
                    if all_orders_data:
                        total_items = sum(order.get('items_count', 0) for order in all_orders_data)
                        total_amount = sum(order.get('total_amount', 0) for order in all_orders_data)
                        
                        summary_message += f"üì¶ <b>–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤:</b> {total_items} —à—Ç\n"
                        summary_message += f"üí∞ <b>–û–±—â–∞—è —Å—É–º–º–∞:</b> {total_amount:,.2f} ‚ÇΩ\n\n"
                        summary_message += f"<b>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–æ–≤:</b>\n"
                        
                        for idx, order in enumerate(all_orders_data[:10], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                            order_num = order.get('order_number', '?')
                            order_date = order.get('date', '?')
                            order_items = order.get('items_count', 0)
                            order_sum = order.get('total_amount', 0)
                            
                            summary_message += f"\n{idx}. <code>{order_num}</code>"
                            summary_message += f"\n   üìÖ {order_date} | üì¶ {order_items} —à—Ç | üí∞ {order_sum:,.0f} ‚ÇΩ"
                        
                        if len(all_orders_data) > 10:
                            summary_message += f"\n\n... –∏ –µ—â—ë {len(all_orders_data) - 10} –∑–∞–∫–∞–∑–æ–≤"
                    
                    sync_send_message(summary_message)
                    
                    # –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –∏–∑ Google Sheets
                    if all_orders_data and Config.GOOGLE_SHEETS_URL and Config.GOOGLE_CREDENTIALS_FILE:
                        try:
                            logger.info("üîÑ –ó–∞–ø—É—Å–∫ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º...")
                            sync_send_message("üîÑ <b>–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º...</b>")
                            
                            from sheets_manager import SheetsManager
                            from product_matcher import ProductMatcher, enrich_orders_with_mapping
                            from bundle_manager import BundleManager
                            
                            # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Google Sheets
                            sheets = SheetsManager(Config.GOOGLE_CREDENTIALS_FILE)
                            if sheets.connect():
                                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã (—Å—Ç—Ä—É–∫—Ç—É—Ä–∞: —Ü–µ–Ω–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ç–∏–ø, –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞)
                                catalog_products = sheets.load_products_from_sheet(
                                    Config.GOOGLE_SHEETS_URL,
                                    columns_range="A:AU"
                                )
                                
                                if catalog_products:
                                    logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞: {len(catalog_products)}")
                                    sync_send_message(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(catalog_products)}")
                                    
                                    # –°–æ–∑–¥–∞—ë–º matcher —Å –æ—Å–Ω–æ–≤–Ω—ã–º —Ñ–∞–π–ª–æ–º –∫–µ—à–∞
                                    matcher = ProductMatcher(
                                        catalog_products,
                                        mappings_file=Config.PRODUCT_MAPPINGS_FILE
                                    )
                                    
                                    # –°–æ–∑–¥–∞—ë–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∑–æ–∫
                                    bundle_manager = BundleManager()
                                    
                                    # –û–±–æ–≥–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º —Ä–µ–∂–∏–º–æ–º (interactive=True)
                                    all_orders_data = enrich_orders_with_mapping(
                                        all_orders_data, 
                                        matcher,
                                        interactive=True,  # –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–´–ô –†–ï–ñ–ò–ú —á–µ—Ä–µ–∑ Telegram
                                        excluded_manager=excluded_manager,  # –ü–µ—Ä–µ–¥–∞—ë–º –º–µ–Ω–µ–¥–∂–µ—Ä –∏—Å–∫–ª—é—á–µ–Ω–∏–π
                                        bundle_manager=bundle_manager  # –ü–µ—Ä–µ–¥–∞—ë–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∑–æ–∫
                                    )
                                    
                                    logger.info("‚úÖ –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
                                    sync_send_message("‚úÖ <b>–°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!</b>")
                                else:
                                    logger.warning("‚ö†Ô∏è –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ –ø—É—Å—Ç")
                            else:
                                logger.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Google Sheets")
                                
                        except Exception as e:
                            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤: {e}")
                            sync_send_message(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è: {e}")
                    
                    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ JSON
                    if all_orders_data:
                        from export_data import export_orders
                        try:
                            json_file = export_orders(all_orders_data)
                            logger.info(f"üìÅ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {json_file}")
                            
                            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
                            export_message = f"üìÅ <b>–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã</b>\n\n"
                            export_message += f"üìÑ –§–∞–π–ª: <code>{json_file}</code>\n\n"
                            
                            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Ç–æ–≤–∞—Ä–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å –º–∞–ø–ø–∏–Ω–≥)
                            types_stats = {}
                            for order in all_orders_data:
                                for item in order.get('items', []):
                                    item_type = item.get('type', '–ù–µ —É–∫–∞–∑–∞–Ω')
                                    if item_type not in types_stats:
                                        types_stats[item_type] = {'count': 0, 'sum': 0}
                                    types_stats[item_type]['count'] += item.get('quantity', 0)
                                    types_stats[item_type]['sum'] += item.get('quantity', 0) * item.get('price', 0)
                            
                            if types_stats:
                                export_message += "<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º:</b>\n"
                                for item_type, stats in sorted(types_stats.items()):
                                    export_message += f"\n‚Ä¢ {item_type}: {stats['count']} —à—Ç ({stats['sum']:,.0f} ‚ÇΩ)"
                            
                            sync_send_message(export_message)
                            
                            # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Google Sheets
                            try:
                                logger.info("üîÑ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Google Sheets...")
                                from sheets_sync import sync_to_sheets
                                
                                if sync_to_sheets(json_file):
                                    logger.info("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å Google Sheets –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
                                else:
                                    logger.warning("‚ö†Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
                                    
                            except Exception as e:
                                logger.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Google Sheets: {e}")
                                sync_send_message(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
                            
                        except Exception as e:
                            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
                            sync_send_message(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

                
                # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                logger.info("–û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º –±—Ä–∞—É–∑–µ—Ä–∞...")
                if page:
                    page.wait_for_timeout(5000)
                
            finally:
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
                logger.info("–ó–∞–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...")
                context.close()
                browser.close()
        
        logger.info("–†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        sync_send_message("‚úÖ <b>–†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>")
        
    except ValueError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:\n{e}\n")
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è.")
        sys.exit(1)
        
    except KeyboardInterrupt:
        logger.info("–ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sync_send_message("‚ö†Ô∏è –†–∞–±–æ—Ç–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
        
    except Exception as e:
        logger.exception(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sync_send_message(f"‚ùå <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞</b>\n\n{str(e)}")
        sys.exit(1)


if __name__ == '__main__':
    main()
